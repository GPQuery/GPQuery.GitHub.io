{"version":3,"sources":["scripts/app-2998c00153.js"],"names":["angular","module","ResultsController","ergastService","$log","activate","getAll","get","$promise","then","response","vm","resultsRows","MRData","RaceTable","Races","Results","results","info","errorMsg","warn","tableHeaders","this","$inject","controller","RacesController","params","season","round","resource","getResource","DriversController","DriverTable","Drivers","PageController","$mdSidenav","navLinks","toggleSidenav","toggle","runBlock","debug","run","routeConfig","$routeProvider","when","templateUrl","controllerAs","otherwise","redirectTo","config","constant","malarkey","moment","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","queryServiceFactory","getAllQueries","service","factory","ergastServiceFactory","$resource","url","paramDefaults","series","actions","method","getDriverStandings","webDevTec","getTec","data","title","description","logo","acmeMalarkey","linkFunc","scope","el","attr","watcher","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","addClass","forEach","extraValues","value","type","pause","$watch","contributors","contributor","login","$on","MalarkeyController","githubContributor","getContributors","directive","restrict","template","link","$http","limit","getContributorsComplete","getContributorsFailed","error","toJson","apiHost","gpDataTableColDirective","replace","tableCols","gpDataTableDirective","DataTableController","$templateCache","put"],"mappings":"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","file":"scripts/app-2998c00153.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('GPQuery.dashboard', []);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GPQuery.dashboard')\n    .controller('ResultsController', ResultsController);\n\n\n  /** @ngInject */\n  function ResultsController(ergastService, $log) {\n    var vm = this;\n    vm.results     = {};\n    vm.tableHeaders = [];\n    vm.resultsRows  = {};\n\n    activate();\n\n    // Constructor\n    // ------------------------------\n    function activate() {\n      getAll();\n\n    }\n\n    // Mutator Function\n    // ------------------------------\n    function getAll() {\n\n      ergastService.get().$promise\n        .then(function(response) {\n          vm.resultsRows = response.MRData.RaceTable.Races[0].Results;\n          vm.results = response.MRData;\n          $log.info('XHR response success: ' + vm.results);\n        }, function(errorMsg) {\n          $log.warn('XHR request failed');\n          vm.results = errorMsg;\n        });\n\n      vm.tableHeaders = ['Pos', 'Grid', 'Driver', '#', 'Nationality', 'Constructor', 'Laps', 'Status', 'Pts'];\n\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GPQuery.dashboard')\n    .controller('RacesController', RacesController);\n\n\n  /** @ngInject */\n  function RacesController(ergastService, $log) {\n    var vm = this;\n    vm.results      = {};\n    vm.tableHeaders = [];\n    vm.resultsRows  = {};\n\n    activate();\n\n    // Constructor\n    // ------------------------------\n    function activate() {\n      getAll();\n    }\n\n    // Mutator Function\n    // ------------------------------\n    function getAll() {\n      var params = {\n        season    : 'current',\n        round     : '',\n        resource  : 'races'\n      };\n\n      ergastService.getResource(params).$promise\n        .then(function(response) {\n          vm.resultsRows = response.MRData.RaceTable.Races;\n          vm.results = response.MRData;\n          $log.info('XHR response success: ' + vm.results);\n        }, function(errorMsg) {\n          $log.warn('XHR request failed');\n          vm.results = errorMsg;\n        });\n\n      vm.tableHeaders = ['Rnd', 'Race', 'Circuit', 'Location', 'Date', 'Time'];\n\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GPQuery.dashboard')\n    .controller('DriversController', DriversController);\n\n\n  /** @ngInject */\n  function DriversController(ergastService, $log) {\n    var vm = this;\n    vm.results      = {};\n    vm.tableHeaders = [];\n    vm.resultsRows  = {};\n\n    activate();\n\n    // Constructor\n    // ------------------------------\n    function activate() {\n      getAll();\n    }\n\n    // Mutator Function\n    // ------------------------------\n    function getAll() {\n      var params = {\n        resource  : 'drivers'\n      };\n\n      ergastService.getResource(params).$promise\n        .then(function(response) {\n          vm.resultsRows = response.MRData.DriverTable.Drivers;\n          vm.results = response.MRData;\n          $log.info('XHR response success: ' + vm.results);\n        }, function(errorMsg) {\n          $log.warn('XHR request failed');\n          vm.results = errorMsg;\n        });\n\n      vm.tableHeaders = ['Name', '', 'DOB', 'Nationality'];\n\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GPQuery.core', [\n      'ngAnimate',\n      'ngCookies',\n      'ngTouch',\n      'ngSanitize',\n      'ngMessages',\n      'ngAria',\n      'ngResource',\n      'ngRoute',\n      'ngMaterial',\n      'nvd3',\n      'toastr'\n    ]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GPQuery.core')\n    .controller('PageController', PageController);\n\n\n  /** @ngInject */\n  function PageController($mdSidenav) {\n    var vm = this;\n\n    vm.navLinks = [];\n    vm.toggleSidenav = toggleSidenav;\n\n    activate();\n\n    ////////////////\n\n\n    // PageController Startup Logic\n    // ------------------------------\n\n    function activate() {\n      vm.navLinks = ['Results', 'Races', 'Drivers', 'Constructors'];\n    }\n\n\n    // Toggle Sidenav\n    // ------------------------------\n\n    function toggleSidenav() {\n      $mdSidenav('left').toggle();\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GPQuery.core')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GPQuery.core')\n    .config(routeConfig);\n\n  function routeConfig($routeProvider) {\n    $routeProvider\n      .when('/races', {\n        templateUrl: 'app/dashboard/queries/races/races.html',\n        controller: 'RacesController',\n        controllerAs: 'vm'\n      })\n      .when('/results', {\n        templateUrl: 'app/dashboard/queries/results/results.html',\n        controller: 'ResultsController',\n        controllerAs: 'vm'\n      })\n      .when('/drivers', {\n        templateUrl: 'app/dashboard/queries/drivers/drivers.html',\n        controller: 'DriversController',\n        controllerAs: 'vm'\n      })\n      .when('/constructors', {\n        templateUrl: 'app/dashboard/queries/constructors/constructors.html',\n        controller: 'ConstructorsController',\n        controllerAs: 'vm'\n      })\n      .otherwise({\n        redirectTo: '/results'\n      });\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('GPQuery.core')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GPQuery.core')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-bottom-left';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  /**\n   * Service for retrieving query mode information\n   */\n  angular\n    .module('GPQuery.core')\n    .factory('queryService', queryServiceFactory);\n\n  /** @ngInject */\n  function queryServiceFactory($log) {\n\n    var service = {\n      getAllQueries:  getAllQueries\n    };\n\n    return service;\n\n    ////////////////\n\n    function getAllQueries() {\n      return {\n\n      };\n    }\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  /**\n   * Ergast Wrapper for ngResource\n   *\n   * @param   {String}  url\n   * @param   {Object}  paramDefaults\n   * @param   {Object}  actions\n   * @return  {Object}  service\n   * @link    https://docs.angularjs.org/api/ngResource/service/$resource\n   */\n  angular\n    .module('GPQuery.core')\n    .factory('ergastService', ergastServiceFactory);\n\n  /** @ngInject */\n  function ergastServiceFactory($log, $resource) {\n\n\n    /**\n     * Parameterised Default URL\n     *\n     * @param {String}      series    'f1' or 'fe'\n     * @param {int|String}  season    Year, 1950-present, or 'current'\n     * @param {int|String}  round     Round Number, or 'last'\n     * @param {String}      resource  Resource Query\n     */\n    var url = 'http://ergast.com/api/:series/:season/:round/:resource.json';\n\n\n    /**\n     * Default Parameters\n     *\n     * @param paramDefaults.series    'f1'\n     * @param paramDefaults.season    'current'\n     * @param paramDefaults.round     'last'\n     * @param paramDefaults.resource  'results'\n     */\n    var paramDefaults = {\n      series    : 'f1',\n      season    : 'current',\n      round     : 'last',\n      resource  : 'results'\n    };\n\n\n    /**\n     * Custom Resource actions\n     *\n     * @return  {HttpPromise}\n     * @link    https://docs.angularjs.org/api/ng/service/$http#usage\n     */\n    var actions = {};\n\n\n    // Get Resource\n    // ------------------------------\n    actions.getResource = {\n      method  : 'GET',\n      params  : {resource: '@resource'}\n    };\n\n\n    // Get Driver Standings\n    // ------------------------------\n    actions.getDriverStandings = {\n      method  : 'GET',\n      params  : {resource  : 'driverStandings'}\n    };\n\n\n    // Create $resource Object\n    // ------------------------------\n    var service = $resource(url, paramDefaults, actions);\n\n\n    // Return Service\n    // ------------------------------\n    return service;\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GPQuery', [\n\n      'GPQuery.core',\n      'GPQuery.components',\n\n      'GPQuery.dashboard'\n\n    ]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n      .module('GPQuery')\n      .service('webDevTec', webDevTec);\n\n  /** @ngInject */\n  function webDevTec() {\n    var data = [\n      {\n        'title': 'AngularJS',\n        'url': 'https://angularjs.org/',\n        'description': 'HTML enhanced for web apps!',\n        'logo': 'angular.png'\n      },\n      {\n        'title': 'BrowserSync',\n        'url': 'http://browsersync.io/',\n        'description': 'Time-saving synchronised browser testing.',\n        'logo': 'browsersync.png'\n      },\n      {\n        'title': 'GulpJS',\n        'url': 'http://gulpjs.com/',\n        'description': 'The streaming build system.',\n        'logo': 'gulp.png'\n      },\n      {\n        'title': 'Jasmine',\n        'url': 'http://jasmine.github.io/',\n        'description': 'Behavior-Driven JavaScript.',\n        'logo': 'jasmine.png'\n      },\n      {\n        'title': 'Karma',\n        'url': 'http://karma-runner.github.io/',\n        'description': 'Spectacular Test Runner for JavaScript.',\n        'logo': 'karma.png'\n      },\n      {\n        'title': 'Protractor',\n        'url': 'https://github.com/angular/protractor',\n        'description': 'End to end test framework for AngularJS applications built on top of WebDriverJS.',\n        'logo': 'protractor.png'\n      },\n      {\n        'title': 'Angular Material Design',\n        'url': 'https://material.angularjs.org/#/',\n        'description': 'The Angular reference implementation of the Google\\'s Material Design specification.',\n        'logo': 'angular-material.png'\n      },\n      {\n        'title': 'Sass (Node)',\n        'url': 'https://github.com/sass/node-sass',\n        'description': 'Node.js binding to libsass, the C version of the popular stylesheet preprocessor, Sass.',\n        'logo': 'node-sass.png'\n      }\n    ];\n\n    this.getTec = getTec;\n\n    function getTec() {\n      return data;\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GPQuery')\n    .directive('acmeMalarkey', acmeMalarkey);\n\n  /** @ngInject */\n  function acmeMalarkey(malarkey) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        extraValues: '='\n      },\n      template: '&nbsp;',\n      link: linkFunc,\n      controller: MalarkeyController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    function linkFunc(scope, el, attr, vm) {\n      var watcher;\n      var typist = malarkey(el[0], {\n        typeSpeed: 40,\n        deleteSpeed: 40,\n        pauseDelay: 800,\n        loop: true,\n        postfix: ' '\n      });\n\n      el.addClass('acme-malarkey');\n\n      angular.forEach(scope.extraValues, function(value) {\n        typist.type(value).pause().delete();\n      });\n\n      watcher = scope.$watch('vm.contributors', function() {\n        angular.forEach(vm.contributors, function(contributor) {\n          typist.type(contributor.login).pause().delete();\n        });\n      });\n\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n\n    /** @ngInject */\n    function MalarkeyController($log, githubContributor) {\n      var vm = this;\n\n      vm.contributors = [];\n\n      activate();\n\n      function activate() {\n        return getContributors().then(function() {\n          $log.info('Activated Contributors View');\n        });\n      }\n\n      function getContributors() {\n        return githubContributor.getContributors(10).then(function(data) {\n          vm.contributors = data;\n\n          return vm.contributors;\n        });\n      }\n    }\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GPQuery')\n    .factory('githubContributor', githubContributor);\n\n  /** @ngInject */\n  function githubContributor($log, $http) {\n    var apiHost = 'https://api.github.com/repos/Swiip/generator-gulp-angular';\n\n    var service = {\n      apiHost: apiHost,\n      getContributors: getContributors\n    };\n\n    return service;\n\n    function getContributors(limit) {\n      if (!limit) {\n        limit = 30;\n      }\n\n      return $http.get(apiHost + '/contributors?per_page=' + limit)\n        .then(getContributorsComplete)\n        .catch(getContributorsFailed);\n\n      function getContributorsComplete(response) {\n        return response.data;\n      }\n\n      function getContributorsFailed(error) {\n        $log.error('XHR Failed for getContributors.\\n' + angular.toJson(error.data, true));\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GPQuery.components', [\n    ]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GPQuery.components')\n    .directive('gpDataTableCol', gpDataTableColDirective);\n\n  /** @ngInject */\n  function gpDataTableColDirective() {\n    var directive = {\n      restrict: 'E',\n      replace: true,\n      scope: {\n        tableCols: '='\n      },\n      template: 'app/components/dataTable/dataTableCol.html'\n      //link: linkFunc,\n    };\n\n    return directive;\n\n    //function linkFunc(scope, el, attr, vm) {\n    //  var watcher;\n    //  var typist = malarkey(el[0], {\n    //    typeSpeed: 40,\n    //    deleteSpeed: 40,\n    //    pauseDelay: 800,\n    //    loop: true,\n    //    postfix: ' '\n    //  });\n\n    //  el.addClass('acme-malarkey');\n\n    //  angular.forEach(scope.extraValues, function(value) {\n    //    typist.type(value).pause().delete();\n    //  });\n\n    //  watcher = scope.$watch('vm.contributors', function() {\n    //    angular.forEach(vm.contributors, function(contributor) {\n    //      typist.type(contributor.login).pause().delete();\n    //    });\n    //  });\n\n    //  scope.$on('$destroy', function () {\n    //    watcher();\n    //  });\n    //}\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GPQuery.components')\n    .directive('gpDataTable', gpDataTableDirective);\n\n  /** @ngInject */\n  function gpDataTableDirective() {\n    var directive = {\n      restrict: 'E',\n      replace: true,\n      scope: {\n      },\n      template: 'app/components/dataTable/dataTable.html',\n      //link: linkFunc,\n      controller: 'DataTableController',\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    //function linkFunc(scope, el, attr, vm) {\n    //  var watcher;\n    //  var typist = malarkey(el[0], {\n    //    typeSpeed: 40,\n    //    deleteSpeed: 40,\n    //    pauseDelay: 800,\n    //    loop: true,\n    //    postfix: ' '\n    //  });\n\n    //  el.addClass('acme-malarkey');\n\n    //  angular.forEach(scope.extraValues, function(value) {\n    //    typist.type(value).pause().delete();\n    //  });\n\n    //  watcher = scope.$watch('vm.contributors', function() {\n    //    angular.forEach(vm.contributors, function(contributor) {\n    //      typist.type(contributor.login).pause().delete();\n    //    });\n    //  });\n\n    //  scope.$on('$destroy', function () {\n    //    watcher();\n    //  });\n    //}\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('GPQuery.components')\n    .controller('DataTableController', DataTableController);\n\n\n  /** @ngInject */\n  function DataTableController($log) {\n    var vm = this;\n\n    vm.title = 'DataTableController';\n\n    activate();\n\n    ////////////////\n\n    // DataTableController Startup Logic\n    // ------------------------------\n    function activate() {\n\n    }\n\n  }\n})();\n\nangular.module(\"GPQuery\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/dataTable/dataTable.html\",\"\");\n$templateCache.put(\"app/dashboard/queries/races/races.html\",\"<table class=\\\"table races\\\" ng-controller=\\\"RacesController as vm\\\"><thead><tr><th ng-repeat=\\\"header in vm.tableHeaders\\\">{{header}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.resultsRows\\\"><td>{{ row.round }}</td><td>{{ row.raceName }}</td><td>{{ row.Circuit.circuitName }}</td><td>{{ row.Circuit.Location.locality }}, {{ row.Circuit.Location.country }}</td><td>{{ row.date }}</td><td>{{ row.time }}</td></tr></tbody></table>\");\n$templateCache.put(\"app/dashboard/queries/drivers/drivers.html\",\"<table class=\\\"table races\\\" ng-controller=\\\"DriversController as vm\\\"><thead><tr><th ng-repeat=\\\"header in vm.tableHeaders\\\">{{header}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.resultsRows\\\"><td>{{ row.familyName }}</td><td>{{ row.givenName }}</td><td>{{ row.dateOfBirth }}</td><td>{{ row.nationality }}</td></tr></tbody></table>\");\n$templateCache.put(\"app/dashboard/queries/results/results.html\",\"<table class=\\\"table results\\\" ng-controller=\\\"ResultsController as vm\\\"><thead><tr><th ng-repeat=\\\"header in vm.tableHeaders\\\">{{header}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.resultsRows\\\"><td>{{ row.positionText }}</td><td>{{ row.grid }}</td><td>{{ row.Driver.givenName }} {{ row.Driver.familyName }}</td><td>{{ row.Driver.permanentNumber }}</td><td>{{ row.Driver.nationality }}</td><td>{{ row.Constructor.name }}</td><td>{{ row.laps }}</td><td ng-if=\\\"row.status !== \\'Finished\\'\\\">{{ row.status }}</td><td ng-if=\\\"row.status === \\'Finished\\'\\\">{{ row.Time.time }}</td><td>{{ row.points }}</td></tr></tbody></table>\");}]);"],"sourceRoot":"/source/"}